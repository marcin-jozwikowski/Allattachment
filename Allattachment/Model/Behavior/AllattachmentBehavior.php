<?php/** * @package  Croogo * @author Marcin Jóźwikowski <marcin@jozwikowski.pl> * @nodeattachment-author Juraj Jancuska <jjancuska@gmail.com> * @copyright (c) 2010 Juraj Jancuska * @license MIT License - http://www.opensource.org/licenses/mit-license.php */class AllattachmentBehavior extends ModelBehavior {    private $binded = array(        'hasMany' => array(            'Allattachment' => array(                'order' => array(                    'Allattachment.priority ASC',                    'Allattachment.created ASC'),                'foreignKey' => 'owner_id'            ))    );    /**     * Before find callback,     *     * @param object $model     * @param array $query     * @return array $query     */    public function beforeFind(&$model, $query) {        $binded = $this->createConditions($model);        $model->bindModel($binded);        return $query;    }        public function afterFind(\Model $model, $results, $primary) {        parent::afterFind($model, $results, $primary);    }        private function createConditions($model){        $binded = $this->binded;        $binded['hasMany']['Allattachment']['conditions'] = array(            'Allattachment.owner' => strtolower($model->plugin.'.'.Inflector::pluralize($model->name)),            'Allattachment.status' => 1        );        return $binded;    }    /**     * Before delete callback     *     * @param object $model     * @return void     */    public function beforeDelete(&$model) {        parent::beforeDelete($model);        $binded = $this->createConditions($model);        $model->bindModel($binded);        $data = $model->findById($model->id);        debug($data); die;        if (isset($data['Allattachment'])) {            App::import('Model', 'Allattachment.Allattachment');            $Attachment = new Attachment;            foreach ($data['Allattachment'] as $attachment) {                $Attachment->read(null, $attachment['id']);                if (!$Attachment->delete($attachment['id'])) {                    return FALSE;                }            }        }        return true;    }}?>